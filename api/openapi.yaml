openapi: 3.0.2
info:
  description: |-
    Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.

    # Rate limits
    Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute.
    An up-to-date value will always provided in the `X-RateLimit-Limit` header
    The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.

    # API SDKs
    For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
  title: gmodstore
  version: 3.0.0
  x-logo:
    url: https://media.gmodstore.com/_/assets/img/gmodstore/logo.svg
    backgroundColor: '#3097d1'
    href: https://www.gmodstore.com
servers:
- description: The main GmodStore API endpoint
  url: https://www.gmodstore.com
security:
- PersonalAccessToken: []
tags:
- name: Personal Access Tokens
- name: Products
- name: Product Coupons
- name: Product Purchases
- name: Product Reviews
- name: Product Versions
- name: Permission Groups
- name: Teams
- name: Team Users
- name: Users
- name: User Badges
- name: User Bans
- name: User Product Purchases
- name: User Products
- name: User Teams
paths:
  /api/v3/me:
    get:
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMeResponse'
          description: Successful response containing the authenticated user and their
            access token
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      summary: Fetch the current authenticated user and their access token
      tags:
      - Users
      x-internal: true
      x-accepts: application/json
  /api/v3/me/personal-access-tokens:
    get:
      operationId: listPersonalAccessTokens
      parameters:
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/PersonalAccessToken'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListPersonalAccessTokensResponse
          description: Successful response containing a list of personal access tokens
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - personal-access-tokens:read
      summary: List all the current user's personal access tokens
      tags:
      - Personal Access Tokens
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createPersonalAccessToken
      requestBody:
        $ref: '#/components/requestBodies/NewPersonalAccessTokenPayload'
        content:
          application/json:
            schema:
              example:
                abilities:
                - permission-groups:read
                - permission-groups:read
                name: name
                expiresAt: 2000-01-23T04:56:07.000+00:00
              properties:
                name:
                  maxLength: 100
                  minLength: 3
                  type: string
                expiresAt:
                  format: date-time
                  nullable: true
                  type: string
                abilities:
                  items:
                    enum:
                    - permission-groups:read
                    - permission-groups:write
                    - personal-access-tokens:read
                    - personal-access-tokens:write
                    - teams:read
                    - teams:write
                    - team-users:read
                    - team-users:write
                    - products:read
                    - products:write
                    - product-coupons:read
                    - product-coupons:write
                    - product-purchases:read
                    - product-purchases:write
                    - product-reviews:read
                    - product-reviews:write
                    - product-versions:read
                    - product-versions:write
                    - product-versions:download
                    - users:read
                    - users:write
                    - user-badges:read
                    - user-badges:write
                    - user-bans:read
                    - user-purchases:read
                    - '*'
                    type: string
                  type: array
                  uniqueItems: true
              required:
              - abilities
              - name
              title: NewPersonalAccessTokenPayload
              type: object
        description: Payload to create a new personal access token
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          description: Successful response containing the newly created personal access
            token, along with the plain text token
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - personal-access-tokens:write
      summary: Create a new personal access token for the current user
      tags:
      - Personal Access Tokens
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/me/personal-access-tokens/{personal_access_token}:
    delete:
      operationId: deletePersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: personal_access_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamResponse'
          description: Successful response containing the team that was just deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - personal-access-tokens:write
      summary: Delete the specified personal access token
      tags:
      - Personal Access Tokens
      x-internal: true
      x-accepts: application/json
    get:
      operationId: getPersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: personal_access_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPersonalAccessTokenResponse'
          description: Successful response containing a single personal access token
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - personal-access-tokens:read
      summary: Get a personal access token belonging to the current user
      tags:
      - Personal Access Tokens
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updatePersonalAccessToken
      parameters:
      - explode: false
        in: path
        name: personal_access_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePersonalAccessTokenResponse'
          description: Successful response containing the personal access token with
            changes applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - personal-access-tokens:write
      summary: Update a personal access token
      tags:
      - Personal Access Tokens
      x-internal: true
      x-accepts: application/json
  /api/v3/permission-groups:
    get:
      operationId: listPermissionGroups
      parameters:
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/PermissionGroup'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListPermissionGroupsResponse
          description: Successful response containing a list of permission groups
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - permission-groups:read
      summary: List all permission groups
      tags:
      - Permission Groups
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createPermissionGroup
      requestBody:
        $ref: '#/components/requestBodies/NewPermissionGroupPayload'
        content:
          application/json:
            schema:
              example:
                permissions: permissions
                title: title
              properties:
                title:
                  maxLength: 100
                  minLength: 3
                  type: string
                permissions:
                  format: json
                  type: string
              required:
              - permissions
              - title
              title: NewPermissionGroupPayload
              type: object
        description: Payload to create a new permission group
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionGroupResponse'
          description: Successful response containing the newly created permission
            group
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - permission-groups:write
      summary: Create a permission group
      tags:
      - Permission Groups
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/permission-groups/{permission_group}:
    delete:
      operationId: deletePermissionGroup
      parameters:
      - explode: false
        in: path
        name: permission_group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePermissionGroupResponse'
          description: Successful response containing the permission group that was
            just deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - permission-groups:write
      summary: Delete the specified permission group
      tags:
      - Permission Groups
      x-internal: true
      x-accepts: application/json
    get:
      operationId: getPermissionGroup
      parameters:
      - explode: false
        in: path
        name: permission_group
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionGroupResponse'
          description: Successful response containing a single permission group
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - permission-groups:read
      summary: Show the specified permission group
      tags:
      - Permission Groups
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updatePermissionGroup
      parameters:
      - explode: false
        in: path
        name: permission_group
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdatePermissionGroupPayload'
        content:
          application/json:
            schema:
              example:
                permissions: permissions
                title: title
              properties:
                title:
                  maxLength: 100
                  minLength: 3
                  type: string
                permissions:
                  format: json
                  type: string
              title: UpdatePermissionGroupPayload
              type: object
        description: Payload to update an existing permission group
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionGroupResponse'
          description: Successful response containing the permission group with changes
            applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - permission-groups:write
      summary: Update the specified permission group
      tags:
      - Permission Groups
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/teams/batch:
    get:
      operationId: getTeams
      parameters:
      - explode: true
        in: query
        name: ids[]
        required: true
        schema:
          items:
            format: uuid
            type: string
          maxItems: 100
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamsResponse'
          description: Successful response containing the requested batch of teams
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:read
      summary: Fetch a batch of teams by id
      tags:
      - Teams
      x-internal: true
      x-accepts: application/json
  /api/v3/teams:
    get:
      operationId: listTeams
      parameters:
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Team'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListTeamsResponse
          description: Successful response containing a list of teams
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:read
      summary: List all teams
      tags:
      - Teams
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createTeam
      requestBody:
        $ref: '#/components/requestBodies/NewTeamPayload'
        content:
          application/json:
            schema:
              example:
                name: name
                description: description
              properties:
                name:
                  maxLength: 50
                  minLength: 3
                  type: string
                description:
                  format: json
                  type: string
              required:
              - name
              title: NewTeamPayload
              type: object
        description: Payload to create a new team
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamResponse'
          description: Successful response containing the newly created team
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:write
      summary: Create a new team
      tags:
      - Teams
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/teams/{team}:
    delete:
      operationId: deleteTeam
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTeamResponse'
          description: Successful response containing the team that was just deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:write
      summary: Delete the specified team
      tags:
      - Teams
      x-internal: true
      x-accepts: application/json
    get:
      operationId: getTeam
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTeamResponse'
          description: Successful response containing a single team
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:read
      summary: Fetch the specified team
      tags:
      - Teams
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updateTeam
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateTeamPayload'
        content:
          application/json:
            schema:
              example:
                name: name
                description: description
              properties:
                name:
                  maxLength: 50
                  minLength: 3
                  type: string
                description:
                  format: json
                  type: string
              title: UpdateTeamPayload
              type: object
        description: Payload to update an existing team
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeamResponse'
          description: Successful response containing the team with changes applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:write
      summary: Update the specified team
      tags:
      - Teams
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/teams/{team}/users:
    get:
      operationId: listTeamUsers
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/TeamUser'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListTeamUsersResponse
          description: Successful response containing a list of team users
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - team-users:read
      summary: List all users in a team
      tags:
      - Team Users
      x-internal: true
      x-accepts: application/json
  /api/v3/products/batch:
    get:
      operationId: getProducts
      parameters:
      - explode: true
        in: query
        name: ids[]
        required: true
        schema:
          items:
            format: uuid
            type: string
          maxItems: 100
          type: array
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductsResponse'
          description: Successful response containing the requested batch of products
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - products:read
      summary: Get a batch of products by id
      tags:
      - Products
      x-internal: true
      x-accepts: application/json
  /api/v3/products/{product}/coupons:
    get:
      operationId: listProductCoupons
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductPurchaseFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ProductCoupon'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductCouponsResponse
          description: Successful response containing a list of product coupons
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-coupons:read
      summary: List all coupons for a product
      tags:
      - Product Coupons
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createProductCoupon
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewProductCouponPayload'
        content:
          application/json:
            schema:
              example:
                maxUses: 60
                code: code
                percent: 8
                expiresAt: 2000-01-23T04:56:07.000+00:00
                boundUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              properties:
                percent:
                  maximum: 90
                  minimum: 1
                  type: integer
                code:
                  maxLength: 64
                  pattern: '[aA-zZ_\-0-9]+'
                  type: string
                maxUses:
                  maximum: 100
                  minimum: 1
                  type: integer
                expiresAt:
                  format: date-time
                  type: string
                boundUserId:
                  format: uuid
                  nullable: true
                  type: string
              required:
              - code
              - expiresAt
              - maxUses
              - percent
              title: NewProductCouponPayload
              type: object
        description: Payload to create a new product coupon
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductCouponResponse'
          description: Successful response containing the newly created product coupon
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-coupons:write
      summary: Create a coupon for a product
      tags:
      - Product Coupons
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/products/{product}/coupons/{coupon}:
    delete:
      operationId: deleteProductCoupon
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: coupon
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductCouponResponse'
          description: Successful response containing the product coupon that was
            just deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-coupons:write
      summary: Delete the specified coupon for a product
      tags:
      - Product Coupons
      x-internal: true
      x-accepts: application/json
    get:
      operationId: getProductCoupon
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: coupon
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductPurchaseFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductCouponResponse'
          description: Successful response containing a single product coupon
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-coupons:read
      summary: Show the specified coupon for a product
      tags:
      - Product Coupons
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updateProductCoupon
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: coupon
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductCouponPayload'
        content:
          application/json:
            schema:
              example:
                maxUses: 60
                code: code
                percent: 8
                expiresAt: 2000-01-23T04:56:07.000+00:00
                boundUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              properties:
                percent:
                  maximum: 90
                  minimum: 1
                  type: integer
                code:
                  maxLength: 64
                  pattern: '[aA-zZ_\-0-9]+'
                  type: string
                maxUses:
                  maximum: 100
                  minimum: 1
                  type: integer
                expiresAt:
                  format: date-time
                  type: string
                boundUserId:
                  format: uuid
                  nullable: true
                  type: string
              title: UpdateProductCouponPayload
              type: object
        description: Payload to update an existing product coupon
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductCouponResponse'
          description: Successful response containing the product coupon with changes
            applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-coupons:write
      summary: Update the specified coupon for a product
      tags:
      - Product Coupons
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/products/{product}/purchases:
    get:
      operationId: listProductPurchases
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductPurchaseFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ProductPurchase'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductPurchasesResponse
          description: Successful response containing a list of product purchases
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-purchases:read
      summary: List all purchases for a product
      tags:
      - Product Purchases
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createProductPurchase
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewProductPurchasePayload'
        content:
          application/json:
            schema:
              example:
                userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              properties:
                userId:
                  format: uuid
                  type: string
              required:
              - userId
              title: NewProductPurchasePayload
              type: object
        description: Payload to create a new product purchase
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductPurchaseResponse'
          description: Successful response containing the newly created product purchase
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-purchases:write
      summary: Create a purchase for a product
      tags:
      - Product Purchases
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/products/{product}/purchases/{purchase}:
    get:
      operationId: getProductPurchase
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: purchase
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductPurchaseFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductPurchaseResponse'
          description: Successful response containing a single product purchase
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-purchases:read
      summary: Show the specified purchase for a product
      tags:
      - Product Purchases
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updateProductPurchase
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: purchase
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductPurchasePayload'
        content:
          application/json:
            schema:
              example:
                revoked: true
              properties:
                revoked:
                  type: boolean
              title: UpdateProductPurchasePayload
              type: object
        description: Payload to update an existing product purchase
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductPurchaseResponse'
          description: Successful response containing the product purchase with changes
            applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-purchases:write
      summary: Update the specified purchase for a product
      tags:
      - Product Purchases
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/products/{product}/reviews:
    get:
      operationId: listProductReviews
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductReviewFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ProductReview'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductReviewsResponse
          description: Successful response containing a list of product reviews
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-reviews:read
      summary: List all reviews for a product
      tags:
      - Product Reviews
      x-internal: true
      x-accepts: application/json
  /api/v3/products/{product}/reviews/{review}:
    get:
      operationId: getProductReview
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: review
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductReviewFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductReviewResponse'
          description: Successful response containing a single product review
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-reviews:read
      summary: Show the specified review for a product
      tags:
      - Product Reviews
      x-internal: true
      x-accepts: application/json
  /api/v3/products/{product}/versions:
    get:
      operationId: listProductVersions
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductVersionFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ProductVersion'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductVersionsResponse
          description: Successful response containing a list of product versions
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:read
      summary: List all versions for a product
      tags:
      - Product Versions
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createProductVersion
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewProductVersionPayload'
        content:
          multipart/form-data:
            encoding:
              file:
                contentType: application/zip,application/x-zip,application/x-zip-compressed
                style: form
            schema:
              properties:
                name:
                  maxLength: 80
                  type: string
                changelog:
                  maxLength: 10000
                  type: string
                file:
                  format: binary
                  maxLength: 75000
                  type: string
                releaseType:
                  enum:
                  - stable
                  - beta
                  - alpha
                  - private
                  - demo
                  type: string
              required:
              - changelog
              - file
              - name
              - releaseType
              title: NewProductVersionPayload
              type: object
        description: Payload to create a new product version
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductVersionResponse'
          description: Successful response containing the newly created product version
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:write
      summary: Create a version for a product
      tags:
      - Product Versions
      x-internal: true
      x-contentType: multipart/form-data
      x-accepts: application/json
  /api/v3/products/{product}/versions/{version}:
    delete:
      operationId: deleteProductVersion
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProductVersionResponse'
          description: Successful response containing the product version that was
            just deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:write
      summary: Delete the specified version for a product
      tags:
      - Product Versions
      x-internal: true
      x-accepts: application/json
    get:
      operationId: getProductVersion
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductVersionFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductVersionResponse'
          description: Successful response containing a single product version
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:read
      summary: Show the specified version for a product
      tags:
      - Product Versions
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updateProductVersion
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateProductVersionPayload'
        content:
          application/json:
            schema:
              example:
                name: name
                changelog: changelog
                release_type: stable
              properties:
                name:
                  maxLength: 80
                  type: string
                changelog:
                  maxLength: 10000
                  type: string
                release_type:
                  enum:
                  - stable
                  - beta
                  - alpha
                  - private
                  - demo
                  type: string
              title: UpdateProductVersionPayload
              type: object
        description: Payload to update an existing product version
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductVersionResponse'
          description: Successful response containing the product version with changes
            applied
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:write
      summary: Update the specified version for a product
      tags:
      - Product Versions
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/products/{product}/versions/{version}/download:
    post:
      operationId: getProductDownloadToken
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadProductVersionResponse'
          description: Successful response containing a download url
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - product-versions:download
      summary: Get a one time use url for downloading a product
      tags:
      - Product Versions
      x-internal: true
      x-accepts: application/json
  /api/v3/teams/{team}/products:
    get:
      operationId: listProducts
      parameters:
      - explode: false
        in: path
        name: team
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Product'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductsResponse
          description: Successful response containing a list of products
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - products:read
      summary: List all products for a team
      tags:
      - Products
      x-internal: true
      x-accepts: application/json
  /api/v3/products/{product}:
    get:
      operationId: getProduct
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
          description: Successful response containing a single product
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - products:read
      summary: Get the specified product
      tags:
      - Products
      x-internal: true
      x-accepts: application/json
    put:
      operationId: updateProduct
      parameters:
      - explode: false
        in: path
        name: product
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - products:write
      summary: Update the specified product
      tags:
      - Products
      x-internal: true
      x-accepts: application/json
  /api/v3/users/batch:
    get:
      operationId: getUsers
      parameters:
      - explode: true
        in: query
        name: ids[]
        required: true
        schema:
          items:
            format: uuid
            type: string
          maxItems: 100
          type: array
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/UserFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersResponse'
          description: Successful response containing the requested batch of users
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - users:read
      summary: Fetch a batch of users by id
      tags:
      - Users
      x-internal: true
      x-accepts: application/json
  /api/v3/users:
    get:
      operationId: listUsers
      parameters:
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/UserFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/User'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListUsersResponse
          description: Successful response containing a list of users
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - users:read
      summary: List all users
      tags:
      - Users
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}:
    get:
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/UserFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
          description: Successful response containing a single user
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - users:read
      summary: Fetch the specified user
      tags:
      - Users
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}/teams:
    get:
      operationId: listUserTeams
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Team'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListTeamsResponse
          description: Successful response containing a list of teams
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - teams:read
      summary: List all the specified user's teams
      tags:
      - User Teams
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}/products:
    get:
      operationId: listUserProducts
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/Product'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductsResponse
          description: Successful response containing a list of products
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - products:read
      summary: List all the specified user's products
      tags:
      - User Products
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}/badges:
    get:
      operationId: listUserBadges
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserBadge'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListUserBadgesResponse
          description: Successful response containing a list of user badges
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - user-badges:read
      summary: List all the specified user's badges
      tags:
      - User Badges
      x-internal: true
      x-accepts: application/json
    post:
      operationId: createUserBadge
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/NewUserBadgePayload'
        content:
          application/json:
            schema:
              example:
                badge_id: 2fa
              properties:
                badge_id:
                  enum:
                  - 2fa
                  - addon-submit
                  - forum-post
                  - beta
                  - first-purchase
                  - received-message
                  - coal
                  - contribution
                  - developer
                  - discord-booster
                  - download
                  - job
                  - featured
                  - sponsor
                  - kawaii
                  - crown
                  - favourites
                  - shiba
                  - negotiated
                  - pug
                  - ex-staff
                  - aspiring
                  - staff
                  - push
                  - bought
                  type: string
              required:
              - badge_id
              title: NewUserBadgePayload
              type: object
        description: Payload to create a new user badge
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserBadgeResponse'
          description: Successful response containing the newly created user badge
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - user-badges:write
      summary: Attach a badge to a user
      tags:
      - User Badges
      x-internal: true
      x-contentType: application/json
      x-accepts: application/json
  /api/v3/users/{user}/badges/{badge}:
    delete:
      operationId: deleteUserBadge
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: badge
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserBadgeResponse'
          description: Successful response containing the user badge that was just
            deleted
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - user-badges:write
      summary: Detach a badge from a user
      tags:
      - User Badges
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}/bans:
    get:
      operationId: listUserBans
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: perPage
        required: false
        schema:
          default: 24
          description: The number of items to return per page
          maximum: 100
          minimum: 1
          nullable: true
          type: integer
        style: form
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/UserBanFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/UserBan'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListUserBansResponse
          description: Successful response containing a list of user bans
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - user-bans:read
      summary: List all the specified user's bans
      tags:
      - User Bans
      x-internal: true
      x-accepts: application/json
  /api/v3/users/{user}/purchases:
    get:
      operationId: listUserPurchases
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      - description: The cursor from which to return paginated results starting after
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filter the results
        explode: true
        in: query
        name: filter
        required: false
        schema:
          $ref: '#/components/schemas/ProductPurchaseFilter'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                allOf:
                - properties:
                    data:
                      items:
                        $ref: '#/components/schemas/ProductPurchase'
                      type: array
                  required:
                  - data
                  type: object
                - $ref: '#/components/schemas/ConnectionPaginated'
                title: ListProductPurchasesResponse
          description: Successful response containing a list of product purchases
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "400":
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Error'
                - $ref: '#/components/schemas/ValidationErrors'
          description: Improperly formatted request passed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token is missing or invalid
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The passed bearer token does not have the right scopes
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource does not exist
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-Ratelimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-Ratelimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-Ratelimit-Reset'
      security:
      - PersonalAccessToken:
        - user-purchases:read
      summary: List all the specified user's purchases
      tags:
      - User Product Purchases
      x-internal: true
      x-accepts: application/json
components:
  headers:
    X-Ratelimit-Limit:
      description: Request limit per minute.
      explode: false
      required: true
      schema:
        default: 60
        format: int64
        minimum: 0
        type: integer
      style: simple
    X-Ratelimit-Reset:
      description: The remaining window before the rate limit resets in UTC epoch
        seconds.
      explode: false
      required: true
      schema:
        format: int64
        minimum: 0
        type: integer
      style: simple
    X-Ratelimit-Remaining:
      description: The number of requests left for the time window.
      explode: false
      required: true
      schema:
        format: int64
        minimum: 0
        type: integer
      style: simple
  requestBodies:
    UpdateProductVersionPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductVersionPayload'
    NewProductPurchasePayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewProductPurchasePayload'
    NewProductVersionPayload:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/NewProductVersionPayload'
    NewPermissionGroupPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewPermissionGroupPayload'
    NewUserBadgePayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewUserBadgePayload'
    UpdateTeamPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTeamPayload'
    UpdateProductPurchasePayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductPurchasePayload'
    UpdatePermissionGroupPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePermissionGroupPayload'
    UpdateProductCouponPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateProductCouponPayload'
    NewPersonalAccessTokenPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewPersonalAccessTokenPayload'
    NewTeamPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewTeamPayload'
    NewProductCouponPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NewProductCouponPayload'
  responses:
    ErrorTooManyRequests:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exceeded the ratelimit
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
    ErrorUnauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The passed bearer token is missing or invalid
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
    ErrorNotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The requested resource does not exist
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
    ErrorBadRequest:
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/Error'
            - $ref: '#/components/schemas/ValidationErrors'
      description: Improperly formatted request passed
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
    ErrorForbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: The passed bearer token does not have the right scopes
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
    NoContent:
      description: Successful response with no content
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/X-Ratelimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/X-Ratelimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/X-Ratelimit-Reset'
  schemas:
    Money:
      example:
        amount: amount
        currency: currency
      properties:
        amount:
          description: Value of the money in smallest denomination of `currency` (e.g
            cents for USD)
          format: int64
          type: string
        currency:
          type: string
      required:
      - amount
      - currency
      type: object
    Error:
      properties:
        message:
          example: Something went wrong
          readOnly: true
          type: string
      required:
      - message
      title: Error
      type: object
    TwoFactorNonce:
      properties:
        token:
          type: string
      type: object
    ConnectionPaginated:
      properties:
        cursors:
          $ref: '#/components/schemas/ConnectionPaginated_cursors'
        connections:
          items:
            type: string
          type: array
        meta:
          $ref: '#/components/schemas/ConnectionPaginated_meta'
      required:
      - connections
      - cursors
      - meta
      type: object
    ProductPurchase:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        revoked: true
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        productId:
          format: uuid
          type: string
        revoked:
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - productId
      - revoked
      - updatedAt
      - userId
      type: object
    Product:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        images:
          bigspot: bigspot
          listing: listing
          listingSmall: listingSmall
        price:
          original:
            amount: amount
            currency: currency
          purchase:
            amount: amount
            currency: currency
          raw: 0
        teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: name
        active: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        shortDescription: shortDescription
        slug: slug
        views: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        teamId:
          format: uuid
          type: string
        slug:
          type: string
        name:
          type: string
        shortDescription:
          nullable: true
          type: string
        price:
          $ref: '#/components/schemas/ProductPrice'
        images:
          $ref: '#/components/schemas/ProductImages'
        views:
          minimum: 0
          type: integer
        active:
          type: boolean
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - active
      - createdAt
      - id
      - images
      - name
      - price
      - shortDescription
      - teamId
      - updatedAt
      - views
      type: object
    ProductCoupon:
      example:
        maxUses: 1
        createdAt: 2000-01-23T04:56:07.000+00:00
        code: code
        boundUser: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        percent: 8
        expiresAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        code:
          maxLength: 64
          pattern: /[aA-zZ_\-0-9]+/
          type: string
        percent:
          maximum: 90
          minimum: 1
          type: integer
        maxUses:
          minimum: 1
          type: integer
        boundUser:
          format: uuid
          nullable: true
          type: string
        expiresAt:
          description: A future date less than 2 weeks from today
          format: date-time
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - boundUser
      - code
      - createdAt
      - expiresAt
      - id
      - maxUses
      - percentage
      - updatedAt
      type: object
    Me:
      example:
        personalAccessToken:
          abilities:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastUsedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        user:
          steamId: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastActionAt: 2000-01-23T04:56:07.000+00:00
          name: name
          teamsCount: 0
          bio: bio
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: https://openapi-generator.tech
          email: email
      properties:
        personalAccessToken:
          $ref: '#/components/schemas/PersonalAccessToken'
        user:
          $ref: '#/components/schemas/User'
      required:
      - user
      type: object
    TeamUser:
      properties:
        teamId:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        primary:
          type: boolean
        percentage:
          format: double
          type: integer
        access:
          format: json
          type: string
      required:
      - primary
      - teamId
      - userId
      type: object
    ProductVersion:
      example:
        fileSize: 0.08008281904610115
        releaseType: stable
        name: name
        changelog: changelog
        fileHash: fileHash
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        changelog:
          type: string
        releaseType:
          enum:
          - stable
          - beta
          - alpha
          - private
          - demo
          type: string
        fileSize:
          minimum: 0
          type: number
        fileHash:
          type: string
      required:
      - changelog
      - fileHash
      - fileSize
      - id
      - name
      - releaseType
      type: object
    ProductReview:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        rating: 1
        votes:
          total: 0
          helpful: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        body: body
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        version: version
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        title:
          type: string
        body:
          format: json
          type: string
        rating:
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        version:
          type: string
        votes:
          $ref: '#/components/schemas/ProductReviewVotes'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - body
      - createdAt
      - id
      - rating
      - title
      - updatedAt
      - userId
      - version
      - votes
      type: object
    OrderItem:
      properties:
        id:
          format: uuid
          type: string
        price:
          $ref: '#/components/schemas/Money'
        reversedAt:
          format: date-time
          type: string
      required:
      - id
      - price
      - reversedAt
      type: object
    User:
      example:
        steamId: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastActionAt: 2000-01-23T04:56:07.000+00:00
        name: name
        teamsCount: 0
        bio: bio
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        avatar: https://openapi-generator.tech
        email: email
      properties:
        id:
          format: uuid
          type: string
        steamId:
          format: int64
          type: integer
        name:
          type: string
        email:
          type: string
        avatar:
          format: uri
          nullable: true
          type: string
        bio:
          format: json
          type: string
        lastActionAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        teamsCount:
          format: int64
          minimum: 0
          type: integer
      required:
      - avatar
      - bio
      - createdAt
      - id
      - lastActionAt
      - name
      - steamId
      type: object
    PersonalAccessToken:
      example:
        abilities:
        - null
        - null
        createdAt: 2000-01-23T04:56:07.000+00:00
        lastUsedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        expiresAt: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        abilities:
          items:
            $ref: '#/components/schemas/PersonalAccessTokenScope'
          type: array
          uniqueItems: true
        lastUsedAt:
          format: date-time
          type: string
        expiresAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - abilities
      - createdAt
      - expiresAt
      - id
      - lastUsedAt
      - name
      - updatedAt
      type: object
    Team:
      example:
        settings: settings
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        usersCount: 0
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        productsCount: 0
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          format: json
          type: string
        settings:
          format: json
          nullable: true
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        productsCount:
          format: int64
          minimum: 0
          type: integer
        usersCount:
          format: int64
          minimum: 0
          type: integer
      required:
      - createdAt
      - description
      - id
      - name
      - productsCount
      - updatedAt
      - usersCount
      type: object
    PermissionGroup:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        commissionRate: 8
        default: false
        editable: true
        permissions: permissions
        displayOrder: 0.6027456183070403
        id: id
        title: title
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          format: Uuid
          pattern: /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i
          readOnly: true
          type: string
        title:
          type: string
        commissionRate:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        displayOrder:
          format: int64
          minimum: 0
          type: number
        default:
          default: false
          readOnly: true
          type: boolean
        editable:
          default: true
          readOnly: true
          type: boolean
        permissions:
          format: json
          type: string
        createdAt:
          format: date-time
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      required:
      - commissionRate
      - createdAt
      - default
      - displayOrder
      - editable
      - id
      - permissions
      - title
      - updatedAt
      type: object
    UserBan:
      properties:
        id:
          format: uuid
          type: string
        userId:
          format: uuid
          type: string
        reason:
          type: string
        bannerId:
          format: uuid
          type: string
        unbanId:
          format: uuid
          type: string
        unbanReason:
          type: string
        properties:
          items:
            enum:
            - everything
            - addon.create
            - addon.purchase
            - addon.download
            - addon.review
            - addon.comment
            - job.create
            - job.apply
            - job.review
            - job.comment
            - forum.post
            - ban.appeal
            title: BanProperty
            type: string
          type: array
          uniqueItems: true
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      required:
      - end
      - id
      - properties
      - start
      - userId
      type: object
    UserBadge:
      example:
        extension: extension
        name: name
        description: description
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          type: string
        description:
          type: string
        extension:
          type: string
      required:
      - description
      - extension
      - id
      - name
      type: object
    ValidationErrors:
      properties:
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      title: ValidationErrors
      type: object
    PersonalAccessTokenScope:
      enum:
      - permission-groups:read
      - permission-groups:write
      - personal-access-tokens:read
      - personal-access-tokens:write
      - teams:read
      - teams:write
      - team-users:read
      - team-users:write
      - products:read
      - products:write
      - product-coupons:read
      - product-coupons:write
      - product-purchases:read
      - product-purchases:write
      - product-reviews:read
      - product-reviews:write
      - product-versions:read
      - product-versions:write
      - product-versions:download
      - users:read
      - users:write
      - user-badges:read
      - user-badges:write
      - user-bans:read
      - user-purchases:read
      - '*'
      title: PersonalAccessTokenScope
      type: string
    ProductFilter:
      properties:
        slug:
          type: string
      title: ProductFilter
      type: object
    ProductPurchaseFilter:
      properties:
        revoked:
          type: boolean
        userId:
          format: uuid
          type: string
        productId:
          format: uuid
          type: string
      title: ProductPurchaseFilter
      type: object
    ProductReviewFilter:
      properties:
        rating:
          format: int32
          maximum: 5
          minimum: 1
          type: integer
      title: ProductReviewFilter
      type: object
    ProductVersionFilter:
      properties:
        releaseType:
          enum:
          - stable
          - beta
          - alpha
          - private
          - demo
          type: string
      title: ProductVersionFilter
      type: object
    UserFilter:
      properties:
        steamId:
          format: int64
          type: integer
      title: UserFilter
      type: object
    UserBanFilter:
      properties:
        bannerId:
          format: uuid
          type: string
      title: UserBanFilter
      type: object
    GetMeResponse:
      example:
        data:
          personalAccessToken:
            abilities:
            - null
            - null
            createdAt: 2000-01-23T04:56:07.000+00:00
            lastUsedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            expiresAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
          user:
            steamId: 0
            createdAt: 2000-01-23T04:56:07.000+00:00
            lastActionAt: 2000-01-23T04:56:07.000+00:00
            name: name
            teamsCount: 0
            bio: bio
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            avatar: https://openapi-generator.tech
            email: email
      properties:
        data:
          $ref: '#/components/schemas/Me'
      required:
      - data
      title: GetMeResponse
      type: object
    NewPersonalAccessTokenPayload:
      example:
        abilities:
        - permission-groups:read
        - permission-groups:read
        name: name
        expiresAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          maxLength: 100
          minLength: 3
          type: string
        expiresAt:
          format: date-time
          nullable: true
          type: string
        abilities:
          items:
            enum:
            - permission-groups:read
            - permission-groups:write
            - personal-access-tokens:read
            - personal-access-tokens:write
            - teams:read
            - teams:write
            - team-users:read
            - team-users:write
            - products:read
            - products:write
            - product-coupons:read
            - product-coupons:write
            - product-purchases:read
            - product-purchases:write
            - product-reviews:read
            - product-reviews:write
            - product-versions:read
            - product-versions:write
            - product-versions:download
            - users:read
            - users:write
            - user-badges:read
            - user-badges:write
            - user-bans:read
            - user-purchases:read
            - '*'
            type: string
          type: array
          uniqueItems: true
      required:
      - abilities
      - name
      title: NewPersonalAccessTokenPayload
      type: object
    inline_response_201_data:
      example:
        plainTextToken: plainTextToken
        personalAccessToken:
          abilities:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastUsedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        personalAccessToken:
          $ref: '#/components/schemas/PersonalAccessToken'
        plainTextToken:
          type: string
      required:
      - personalAccessToken
      - plainTextToken
      type: object
    inline_response_201:
      example:
        data:
          plainTextToken: plainTextToken
          personalAccessToken:
            abilities:
            - null
            - null
            createdAt: 2000-01-23T04:56:07.000+00:00
            lastUsedAt: 2000-01-23T04:56:07.000+00:00
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            expiresAt: 2000-01-23T04:56:07.000+00:00
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/inline_response_201_data'
      required:
      - data
      type: object
    GetPersonalAccessTokenResponse:
      example:
        data:
          abilities:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastUsedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PersonalAccessToken'
      required:
      - data
      title: GetPersonalAccessTokenResponse
      type: object
    UpdatePersonalAccessTokenResponse:
      example:
        data:
          abilities:
          - null
          - null
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastUsedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PersonalAccessToken'
      required:
      - data
      title: UpdatePersonalAccessTokenResponse
      type: object
    DeleteTeamResponse:
      example:
        data:
          settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Team'
      required:
      - data
      title: DeleteTeamResponse
      type: object
    NewPermissionGroupPayload:
      example:
        permissions: permissions
        title: title
      properties:
        title:
          maxLength: 100
          minLength: 3
          type: string
        permissions:
          format: json
          type: string
      required:
      - permissions
      - title
      title: NewPermissionGroupPayload
      type: object
    CreatePermissionGroupResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          commissionRate: 8
          default: false
          editable: true
          permissions: permissions
          displayOrder: 0.6027456183070403
          id: id
          title: title
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PermissionGroup'
      required:
      - data
      title: CreatePermissionGroupResponse
      type: object
    GetPermissionGroupResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          commissionRate: 8
          default: false
          editable: true
          permissions: permissions
          displayOrder: 0.6027456183070403
          id: id
          title: title
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PermissionGroup'
      required:
      - data
      title: GetPermissionGroupResponse
      type: object
    UpdatePermissionGroupPayload:
      example:
        permissions: permissions
        title: title
      properties:
        title:
          maxLength: 100
          minLength: 3
          type: string
        permissions:
          format: json
          type: string
      title: UpdatePermissionGroupPayload
      type: object
    UpdatePermissionGroupResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          commissionRate: 8
          default: false
          editable: true
          permissions: permissions
          displayOrder: 0.6027456183070403
          id: id
          title: title
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PermissionGroup'
      required:
      - data
      title: UpdatePermissionGroupResponse
      type: object
    DeletePermissionGroupResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          commissionRate: 8
          default: false
          editable: true
          permissions: permissions
          displayOrder: 0.6027456183070403
          id: id
          title: title
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/PermissionGroup'
      required:
      - data
      title: DeletePermissionGroupResponse
      type: object
    GetTeamsResponse:
      example:
        data:
        - settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/Team'
          type: array
      required:
      - data
      title: GetTeamsResponse
      type: object
    NewTeamPayload:
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 50
          minLength: 3
          type: string
        description:
          format: json
          type: string
      required:
      - name
      title: NewTeamPayload
      type: object
    CreateTeamResponse:
      example:
        data:
          settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Team'
      required:
      - data
      title: CreateTeamResponse
      type: object
    GetTeamResponse:
      example:
        data:
          settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Team'
      required:
      - data
      title: GetTeamResponse
      type: object
    UpdateTeamPayload:
      example:
        name: name
        description: description
      properties:
        name:
          maxLength: 50
          minLength: 3
          type: string
        description:
          format: json
          type: string
      title: UpdateTeamPayload
      type: object
    UpdateTeamResponse:
      example:
        data:
          settings: settings
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          usersCount: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          productsCount: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Team'
      required:
      - data
      title: UpdateTeamResponse
      type: object
    GetProductsResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          images:
            bigspot: bigspot
            listing: listing
            listingSmall: listingSmall
          price:
            original:
              amount: amount
              currency: currency
            purchase:
              amount: amount
              currency: currency
            raw: 0
          teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          shortDescription: shortDescription
          slug: slug
          views: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          images:
            bigspot: bigspot
            listing: listing
            listingSmall: listingSmall
          price:
            original:
              amount: amount
              currency: currency
            purchase:
              amount: amount
              currency: currency
            raw: 0
          teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          shortDescription: shortDescription
          slug: slug
          views: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/Product'
          type: array
      required:
      - data
      title: GetProductsResponse
      type: object
    NewProductCouponPayload:
      example:
        maxUses: 60
        code: code
        percent: 8
        expiresAt: 2000-01-23T04:56:07.000+00:00
        boundUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        percent:
          maximum: 90
          minimum: 1
          type: integer
        code:
          maxLength: 64
          pattern: '[aA-zZ_\-0-9]+'
          type: string
        maxUses:
          maximum: 100
          minimum: 1
          type: integer
        expiresAt:
          format: date-time
          type: string
        boundUserId:
          format: uuid
          nullable: true
          type: string
      required:
      - code
      - expiresAt
      - maxUses
      - percent
      title: NewProductCouponPayload
      type: object
    CreateProductCouponResponse:
      example:
        data:
          maxUses: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          boundUser: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          percent: 8
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductCoupon'
      required:
      - data
      title: CreateProductCouponResponse
      type: object
    GetProductCouponResponse:
      example:
        data:
          maxUses: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          boundUser: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          percent: 8
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductCoupon'
      required:
      - data
      title: GetProductCouponResponse
      type: object
    UpdateProductCouponPayload:
      example:
        maxUses: 60
        code: code
        percent: 8
        expiresAt: 2000-01-23T04:56:07.000+00:00
        boundUserId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        percent:
          maximum: 90
          minimum: 1
          type: integer
        code:
          maxLength: 64
          pattern: '[aA-zZ_\-0-9]+'
          type: string
        maxUses:
          maximum: 100
          minimum: 1
          type: integer
        expiresAt:
          format: date-time
          type: string
        boundUserId:
          format: uuid
          nullable: true
          type: string
      title: UpdateProductCouponPayload
      type: object
    UpdateProductCouponResponse:
      example:
        data:
          maxUses: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          boundUser: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          percent: 8
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductCoupon'
      required:
      - data
      title: UpdateProductCouponResponse
      type: object
    DeleteProductCouponResponse:
      example:
        data:
          maxUses: 1
          createdAt: 2000-01-23T04:56:07.000+00:00
          code: code
          boundUser: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          percent: 8
          expiresAt: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductCoupon'
      required:
      - data
      title: DeleteProductCouponResponse
      type: object
    NewProductPurchasePayload:
      example:
        userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        userId:
          format: uuid
          type: string
      required:
      - userId
      title: NewProductPurchasePayload
      type: object
    CreateProductPurchaseResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revoked: true
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductPurchase'
      required:
      - data
      title: CreateProductPurchaseResponse
      type: object
    GetProductPurchaseResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revoked: true
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductPurchase'
      required:
      - data
      title: GetProductPurchaseResponse
      type: object
    UpdateProductPurchasePayload:
      example:
        revoked: true
      properties:
        revoked:
          type: boolean
      title: UpdateProductPurchasePayload
      type: object
    UpdateProductPurchaseResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          productId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          revoked: true
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductPurchase'
      required:
      - data
      title: UpdateProductPurchaseResponse
      type: object
    GetProductReviewResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          rating: 1
          votes:
            total: 0
            helpful: 0
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
          body: body
          userId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          version: version
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/ProductReview'
      required:
      - data
      title: GetProductReviewResponse
      type: object
    NewProductVersionPayload:
      properties:
        name:
          maxLength: 80
          type: string
        changelog:
          maxLength: 10000
          type: string
        file:
          format: binary
          maxLength: 75000
          type: string
        releaseType:
          enum:
          - stable
          - beta
          - alpha
          - private
          - demo
          type: string
      required:
      - changelog
      - file
      - name
      - releaseType
      title: NewProductVersionPayload
      type: object
    CreateProductVersionResponse:
      example:
        data:
          fileSize: 0.08008281904610115
          releaseType: stable
          name: name
          changelog: changelog
          fileHash: fileHash
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/ProductVersion'
      required:
      - data
      title: CreateProductVersionResponse
      type: object
    GetProductVersionResponse:
      example:
        data:
          fileSize: 0.08008281904610115
          releaseType: stable
          name: name
          changelog: changelog
          fileHash: fileHash
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/ProductVersion'
      required:
      - data
      title: GetProductVersionResponse
      type: object
    UpdateProductVersionPayload:
      example:
        name: name
        changelog: changelog
        release_type: stable
      properties:
        name:
          maxLength: 80
          type: string
        changelog:
          maxLength: 10000
          type: string
        release_type:
          enum:
          - stable
          - beta
          - alpha
          - private
          - demo
          type: string
      title: UpdateProductVersionPayload
      type: object
    UpdateProductVersionResponse:
      example:
        data:
          fileSize: 0.08008281904610115
          releaseType: stable
          name: name
          changelog: changelog
          fileHash: fileHash
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/ProductVersion'
      required:
      - data
      title: UpdateProductVersionResponse
      type: object
    DeleteProductVersionResponse:
      example:
        data:
          fileSize: 0.08008281904610115
          releaseType: stable
          name: name
          changelog: changelog
          fileHash: fileHash
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/ProductVersion'
      required:
      - data
      title: DeleteProductVersionResponse
      type: object
    DownloadProductVersionResponse_data:
      example:
        url: url
      properties:
        url:
          type: string
      required:
      - url
      type: object
    DownloadProductVersionResponse:
      example:
        data:
          url: url
      properties:
        data:
          $ref: '#/components/schemas/DownloadProductVersionResponse_data'
      required:
      - data
      title: DownloadProductVersionResponse
      type: object
    GetProductResponse:
      example:
        data:
          createdAt: 2000-01-23T04:56:07.000+00:00
          images:
            bigspot: bigspot
            listing: listing
            listingSmall: listingSmall
          price:
            original:
              amount: amount
              currency: currency
            purchase:
              amount: amount
              currency: currency
            raw: 0
          teamId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: name
          active: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          shortDescription: shortDescription
          slug: slug
          views: 0
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          $ref: '#/components/schemas/Product'
      required:
      - data
      title: GetProductResponse
      type: object
    GetUsersResponse:
      example:
        data:
        - steamId: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastActionAt: 2000-01-23T04:56:07.000+00:00
          name: name
          teamsCount: 0
          bio: bio
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: https://openapi-generator.tech
          email: email
        - steamId: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastActionAt: 2000-01-23T04:56:07.000+00:00
          name: name
          teamsCount: 0
          bio: bio
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: https://openapi-generator.tech
          email: email
      properties:
        data:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
      - data
      title: GetUsersResponse
      type: object
    GetUserResponse:
      example:
        data:
          steamId: 0
          createdAt: 2000-01-23T04:56:07.000+00:00
          lastActionAt: 2000-01-23T04:56:07.000+00:00
          name: name
          teamsCount: 0
          bio: bio
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          avatar: https://openapi-generator.tech
          email: email
      properties:
        data:
          $ref: '#/components/schemas/User'
      required:
      - data
      title: GetUserResponse
      type: object
    NewUserBadgePayload:
      example:
        badge_id: 2fa
      properties:
        badge_id:
          enum:
          - 2fa
          - addon-submit
          - forum-post
          - beta
          - first-purchase
          - received-message
          - coal
          - contribution
          - developer
          - discord-booster
          - download
          - job
          - featured
          - sponsor
          - kawaii
          - crown
          - favourites
          - shiba
          - negotiated
          - pug
          - ex-staff
          - aspiring
          - staff
          - push
          - bought
          type: string
      required:
      - badge_id
      title: NewUserBadgePayload
      type: object
    CreateUserBadgeResponse:
      example:
        data:
          extension: extension
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/UserBadge'
      required:
      - data
      title: CreateUserBadgeResponse
      type: object
    DeleteUserBadgeResponse:
      example:
        data:
          extension: extension
          name: name
          description: description
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        data:
          $ref: '#/components/schemas/UserBadge'
      required:
      - data
      title: DeleteUserBadgeResponse
      type: object
    ConnectionPaginated_cursors:
      properties:
        prev:
          nullable: true
          type: string
        next:
          nullable: true
          type: string
      required:
      - next
      - prev
      type: object
    ConnectionPaginated_meta:
      properties:
        perPage:
          format: int64
          type: integer
      required:
      - perPage
      type: object
    ProductPrice:
      example:
        original:
          amount: amount
          currency: currency
        purchase:
          amount: amount
          currency: currency
        raw: 0
      properties:
        raw:
          description: Value of the money in smallest denomination of `currency` (e.g
            cents for USD)
          type: integer
        original:
          $ref: '#/components/schemas/Money'
        purchase:
          $ref: '#/components/schemas/Money'
      title: ProductPrice
      type: object
    ProductImages:
      example:
        bigspot: bigspot
        listing: listing
        listingSmall: listingSmall
      properties:
        bigspot:
          type: string
        listing:
          type: string
        listingSmall:
          type: string
      title: ProductImages
      type: object
    ProductReviewVotes:
      example:
        total: 0
        helpful: 0
      properties:
        helpful:
          format: int64
          minimum: 0
          type: integer
        total:
          format: int64
          minimum: 0
          type: integer
      required:
      - helpful
      - total
      title: ProductReviewVotes
      type: object
  securitySchemes:
    PersonalAccessToken:
      scheme: bearer
      type: http
x-tagGroups:
- name: Permission Groups
  tags:
  - Permission Groups
- name: Personal Access Tokens
  tags:
  - Personal Access Tokens
- name: Products
  tags:
  - Products
  - Product Coupons
  - Product Purchases
  - Product Reviews
  - Product Versions
- name: Teams
  tags:
  - Teams
  - Team Users
- name: Users
  tags:
  - Users
  - User Product Purchases
  - User Products
  - User Badges
  - User Bans
  - User Teams

