/*
 * GmodStore
 * Welcome to the Gmodstore API! You can use our API to access Gmodstore API endpoints, which can be used interact with Gmodstore programmatically.
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package no.everyday.gmodstore_sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * UpdateAddonCoupon
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-27T03:49:40.602050Z[Etc/UTC]")
public class UpdateAddonCoupon {
  @SerializedName("percent")
  private Integer percent = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("max_uses")
  private Integer maxUses = null;

  @SerializedName("expires_at")
  private OffsetDateTime expiresAt = null;

  public UpdateAddonCoupon percent(Integer percent) {
    this.percent = percent;
    return this;
  }

   /**
   * Get percent
   * minimum: 1
   * maximum: 99
   * @return percent
  **/
  @Schema(required = true, description = "")
  public Integer getPercent() {
    return percent;
  }

  public void setPercent(Integer percent) {
    this.percent = percent;
  }

  public UpdateAddonCoupon code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(required = true, description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public UpdateAddonCoupon maxUses(Integer maxUses) {
    this.maxUses = maxUses;
    return this;
  }

   /**
   * Get maxUses
   * @return maxUses
  **/
  @Schema(required = true, description = "")
  public Integer getMaxUses() {
    return maxUses;
  }

  public void setMaxUses(Integer maxUses) {
    this.maxUses = maxUses;
  }

  public UpdateAddonCoupon expiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Can be maximum of two weeks into the future
   * @return expiresAt
  **/
  @Schema(required = true, description = "Can be maximum of two weeks into the future")
  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }

  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAddonCoupon updateAddonCoupon = (UpdateAddonCoupon) o;
    return Objects.equals(this.percent, updateAddonCoupon.percent) &&
        Objects.equals(this.code, updateAddonCoupon.code) &&
        Objects.equals(this.maxUses, updateAddonCoupon.maxUses) &&
        Objects.equals(this.expiresAt, updateAddonCoupon.expiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(percent, code, maxUses, expiresAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAddonCoupon {\n");
    
    sb.append("    percent: ").append(toIndentedString(percent)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    maxUses: ").append(toIndentedString(maxUses)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
