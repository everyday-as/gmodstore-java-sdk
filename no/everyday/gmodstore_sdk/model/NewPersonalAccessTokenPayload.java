/*
 * gmodstore
 * Welcome to the GmodStore API! You can use our API to access GmodStore API endpoints, which can be used interact with GmodStore programmatically.  # Rate limits Every request you make to the GmodStore API will count against your rate limit, which at the time of writing this, is 60 requests / minute. An up-to-date value will always provided in the `X-RateLimit-Limit` header The number of requests you have remaining before you must wait is provided in the `X-RateLimit-Remaining` header.  # API SDKs For a list of available API SDKs check the README here: https://github.com/everyday-as/gmodstore-api-docs#client-libraries
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package no.everyday.gmodstore_sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.jackson.nullable.JsonNullable;
import org.threeten.bp.OffsetDateTime;

/**
 * NewPersonalAccessTokenPayload
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-04T05:42:04.718207Z[Etc/UTC]")
public class NewPersonalAccessTokenPayload {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EXPIRES_AT = "expiresAt";
  @SerializedName(SERIALIZED_NAME_EXPIRES_AT)
  private OffsetDateTime expiresAt;

  /**
   * Gets or Sets abilities
   */
  @JsonAdapter(AbilitiesEnum.Adapter.class)
  public enum AbilitiesEnum {
    PERMISSION_GROUPS_READ("permission-groups:read"),
    
    PERMISSION_GROUPS_WRITE("permission-groups:write"),
    
    PERSONAL_ACCESS_TOKENS_READ("personal-access-tokens:read"),
    
    PERSONAL_ACCESS_TOKENS_WRITE("personal-access-tokens:write"),
    
    TEAMS_READ("teams:read"),
    
    TEAMS_WRITE("teams:write"),
    
    TEAM_USERS_READ("team-users:read"),
    
    TEAM_USERS_WRITE("team-users:write"),
    
    PRODUCTS_READ("products:read"),
    
    PRODUCTS_WRITE("products:write"),
    
    PRODUCT_COUPONS_READ("product-coupons:read"),
    
    PRODUCT_COUPONS_WRITE("product-coupons:write"),
    
    PRODUCT_PURCHASES_READ("product-purchases:read"),
    
    PRODUCT_PURCHASES_WRITE("product-purchases:write"),
    
    PRODUCT_REVIEWS_READ("product-reviews:read"),
    
    PRODUCT_REVIEWS_WRITE("product-reviews:write"),
    
    PRODUCT_VERSIONS_READ("product-versions:read"),
    
    PRODUCT_VERSIONS_WRITE("product-versions:write"),
    
    PRODUCT_VERSIONS_DOWNLOAD("product-versions:download"),
    
    USERS_READ("users:read"),
    
    USERS_WRITE("users:write"),
    
    USER_BADGES_READ("user-badges:read"),
    
    USER_BADGES_WRITE("user-badges:write"),
    
    USER_BANS_READ("user-bans:read"),
    
    USER_PURCHASES_READ("user-purchases:read"),
    
    STAR("*");

    private String value;

    AbilitiesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AbilitiesEnum fromValue(String value) {
      for (AbilitiesEnum b : AbilitiesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AbilitiesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AbilitiesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AbilitiesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AbilitiesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ABILITIES = "abilities";
  @SerializedName(SERIALIZED_NAME_ABILITIES)
  private Set<AbilitiesEnum> abilities = new LinkedHashSet<AbilitiesEnum>();


  public NewPersonalAccessTokenPayload name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public NewPersonalAccessTokenPayload expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * Get expiresAt
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public NewPersonalAccessTokenPayload abilities(Set<AbilitiesEnum> abilities) {
    
    this.abilities = abilities;
    return this;
  }

  public NewPersonalAccessTokenPayload addAbilitiesItem(AbilitiesEnum abilitiesItem) {
    this.abilities.add(abilitiesItem);
    return this;
  }

   /**
   * Get abilities
   * @return abilities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Set<AbilitiesEnum> getAbilities() {
    return abilities;
  }


  public void setAbilities(Set<AbilitiesEnum> abilities) {
    this.abilities = abilities;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewPersonalAccessTokenPayload newPersonalAccessTokenPayload = (NewPersonalAccessTokenPayload) o;
    return Objects.equals(this.name, newPersonalAccessTokenPayload.name) &&
        Objects.equals(this.expiresAt, newPersonalAccessTokenPayload.expiresAt) &&
        Objects.equals(this.abilities, newPersonalAccessTokenPayload.abilities);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, expiresAt, abilities);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewPersonalAccessTokenPayload {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    abilities: ").append(toIndentedString(abilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

